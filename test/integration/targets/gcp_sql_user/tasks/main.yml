---
# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by Magic Modules and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file at
#     https://www.github.com/GoogleCloudPlatform/magic-modules
#
# ----------------------------------------------------------------------------
# Pre-test setup
- name: create a instance
  gcp_sql_instance:
      name: 'instance-user'
      settings:
        ip_configuration:
          authorized_networks:
            - name: 'google dns server'
              value: '8.8.8.8/32'
        tier: db-n1-standard-1
      region: us-central1
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: present
  register: instance
- name: delete a user
  gcp_sql_user:
      # Can't use Ansible random name because it's too long
      name: 'test-user'
      host: '10.1.2.3'
      password: 'secret-password'
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: absent
#----------------------------------------------------------
- name: create a user
  gcp_sql_user:
      # Can't use Ansible random name because it's too long
      name: 'test-user'
      host: '10.1.2.3'
      password: 'secret-password'
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: present
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
      - "result.kind == 'sql#user'"
# ----------------------------------------------------------------------------
- name: create a user that already exists
  gcp_sql_user:
      # Can't use Ansible random name because it's too long
      name: 'test-user'
      host: '10.1.2.3'
      password: 'secret-password'
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: present
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
      - "result.kind == 'sql#user'"
#----------------------------------------------------------
- name: delete a user
  gcp_sql_user:
      # Can't use Ansible random name because it's too long
      name: 'test-user'
      host: '10.1.2.3'
      password: 'secret-password'
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: absent
  register: result
- name: assert changed is true
  assert:
    that:
      - result.changed == true
      - result.has_key('kind') == False
# ----------------------------------------------------------------------------
- name: delete a user that does not exist
  gcp_sql_user:
      # Can't use Ansible random name because it's too long
      name: 'test-user'
      host: '10.1.2.3'
      password: 'secret-password'
      instance: "{{ instance }}"
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: absent
  register: result
- name: assert changed is false
  assert:
    that:
      - result.changed == false
      - result.has_key('kind') == False
#---------------------------------------------------------
# Post-test teardown
- name: delete a instance
  gcp_sql_instance:
      name: 'instance-user'
      settings:
        ip_configuration:
          authorized_networks:
            - name: 'google dns server'
              value: '8.8.8.8/32'
        tier: db-n1-standard-1
      region: us-central1
      project: "{{ gcp_project }}"
      auth_kind: "{{ gcp_cred_kind }}"
      service_account_file: "{{ gcp_cred_file }}"
      scopes:
        - https://www.googleapis.com/auth/sqlservice.admin
      state: absent
  register: instance
